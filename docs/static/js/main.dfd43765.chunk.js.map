{"version":3,"sources":["firebase/firebase-config.js","routers/PublicRoute.js","routers/PrivateRoute.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUp.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/dashboard/JournalEntry.js","components/dashboard/JournalEntries.js","components/dashboard/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/dashboard/NothingSelected.js","components/dashboard/JournalScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","useForm","initialState","useState","stateValues","setValues","handlerInputForm","target","name","value","reset","noteCurrent","types","errorMsgForm","msgError","type","payload","removeErrorMsgForm","startLoading","finishLoading","loadNotes","uid","a","collection","orderBy","get","snapNotes","notes","forEach","snapHijo","push","id","data","fileUp","file","formData","FormData","append","fetch","method","body","resp","ok","json","respCloud","secure_url","activeNote","note","loadNotesAction","loadNotesStart","dispatch","updateNote","getState","url","doc","update","updateNoteRefresh","Swal","fire","title","noteActive","active","noteDelete","notesAdd","login","displayName","LoginScreen","useDispatch","loading","useSelector","state","ui","email","password","className","onSubmit","e","preventDefault","signInWithEmailAndPassword","then","user","catch","message","loginEmailPassword","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","newRegister","AuthRouter","exact","path","JournalEntry","date","dateNow","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","docRef","NotesAppBar","handleDelete","delete","startDelete","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileURL","noteComplete","close","fileUpload","document","querySelector","click","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","NoteScreen","activeId","useRef","useEffect","current","NothingSelected","JournalScreen","AppRouter","checking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dfd43765.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAjFySsPBpTJXo50wwPpkb4ohxc8_cTLYk\",\n  authDomain: \"journalapp-55c2e.firebaseapp.com\",\n  databaseURL: \"https://journalapp-55c2e.firebaseio.com\",\n  projectId: \"journalapp-55c2e\",\n  storageBucket: \"journalapp-55c2e.appspot.com\",\n  messagingSenderId: \"634861537777\",\n  appId: \"1:634861537777:web:f166eb03477960ccc95c50\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/auth/login\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  //maneja el estado y el cambio del valor del imput\n  const [stateValues, setValues] = useState(initialState);\n\n  const handlerInputForm = ({ target }) => {\n    setValues({ ...stateValues, [target.name]: target.value });\n  };\n\n  //pone el valor del state en un objeto vacio\n  const reset = (noteCurrent = initialState) => {\n    setValues(noteCurrent);\n  };\n\n  return [handlerInputForm, stateValues, reset];\n};\n","export const types = {\n  login: \"[Auth] Login\",\n  logout: \"[Auth] Logout\",\n\n  uiSetError: \"[UI] Error\",\n  uiRemoveError: \"[UI] Remove Error\",\n  uiStartLoading: \"[UI] Loading Start\",\n  uiFinishLoading: \"[UI] Loading Finish\",\n\n  notesAddNew: \"[NOTES] Add Note\",\n  notesActive: \"[NOTES] Active Note\",\n  notesLoad: \"[NOTES] Load Notes\",\n  notesUpdate: \"[NOTES] Update Note\",\n  notesDelete: \"[NOTES] Delete Note\",\n  notesFileUrl: \"[NOTES] File URL\",\n  notesLogoutCleaning: \"[NOTES] Logout Cleaning\",\n};\n","import { types } from \"../types/types\"; //nos ayuda a comparar que tipo de accion tomar\n\n//accion para manejar los errores del formulario.\nexport const errorMsgForm = (msgError) => {\n  return {\n    type: types.uiSetError,\n    payload: msgError,\n  };\n};\n\n//accion para borrar el error\nexport const removeErrorMsgForm = () => {\n  return {\n    type: types.uiRemoveError,\n  };\n};\n\n//accion activar loading\nexport const startLoading = () => {\n  return { type: types.uiStartLoading };\n};\n\n//accion desactivar loading\nexport const finishLoading = () => {\n  return { type: types.uiFinishLoading };\n};\n","import { db } from \"../firebase/firebase-config\";\n\nexport const loadNotes = async (uid) => {\n  const snapNotes = await db\n    .collection(`${uid}/journal/notes`)\n    .orderBy(\"date\", \"desc\")\n    .get();\n\n  const notes = [];\n\n  snapNotes.forEach((snapHijo) => {\n    notes.push({ id: snapHijo.id, ...snapHijo.data() });\n  });\n\n  return notes;\n};\n","export const fileUp = async (file) => {\n  const URL = \"https://api.cloudinary.com/v1_1/drqrch61u/upload\";\n  const formData = new FormData();\n\n  formData.append(\"upload_preset\", \"bmi5bgwd\");\n  formData.append(\"file\", file);\n\n  try {\n    const resp = await fetch(URL, { method: \"POST\", body: formData });\n\n    if (resp.ok) {\n      const respCloud = await resp.json();\n      return respCloud.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n","import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { fileUp } from \"../helpers/fileUp\";\nexport const newNote = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n\n    const newNote = {\n      title: \"\",\n      body: \"\",\n      date: new Date().getTime(),\n    };\n\n    const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(docRef.id, newNote));\n    dispatch(notesAdd(docRef.id, newNote));\n  };\n};\n\nexport const activeNote = (id, note) => {\n  return {\n    type: types.notesActive,\n    payload: { id, ...note },\n  };\n};\n\nexport const loadNotesAction = (notes) => {\n  return {\n    type: types.notesLoad,\n    payload: notes,\n  };\n};\n\nexport const loadNotesStart = (uid) => {\n  return async (dispatch) => {\n    const notes = await loadNotes(uid);\n    dispatch(loadNotesAction(notes));\n  };\n};\n\nexport const updateNote = (note) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const id = note.id;\n    delete note.id;\n    if (!note.url) {\n      delete note.url;\n    }\n    await db.doc(`${uid}/journal/notes/${id}`).update(note);\n\n    dispatch(updateNoteRefresh(id, note));\n\n    Swal.fire(\"Saved\", note.title, \"success\");\n  };\n};\n\nexport const updateNoteRefresh = (id, noteActive) => {\n  return {\n    type: types.notesUpdate,\n    payload: { id, active: { id, ...noteActive }, note: { id, ...noteActive } },\n  };\n};\n\nexport const fileUpload = (file) => {\n  return async (dispatch, getState) => {\n    Swal.fire({\n      title: \"Uploading...\",\n      text: \"Wait a moment...\",\n      allowOutsideClick: false,\n      showConfirmButton: false,\n\n      willOpen: () => {\n        Swal.showLoading();\n      },\n    });\n\n    const fileURL = await fileUp(file);\n\n    const note = getState().notes.active;\n\n    const noteComplete = { ...note, url: fileURL };\n\n    dispatch(updateNote(noteComplete));\n\n    Swal.close();\n  };\n};\n\nexport const startDelete = (id) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(noteDelete(id));\n    Swal.fire(\"Deleted\", \"Note deleted\", \"success\");\n  };\n};\n\nexport const noteDelete = (id) => ({ type: types.notesDelete, payload: id });\n\nexport const LogoutCleaning = () => ({\n  type: types.notesLogoutCleaning,\n});\n\nexport const notesAdd = (id, note) => ({\n  type: types.notesAddNew,\n  payload: { id, ...note },\n});\n","import { types } from \"../types/types\"; //nos ayuda a comparar que tipo de accion tomar\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\nimport Swal from \"sweetalert2\";\nimport {\n  errorMsgForm,\n  removeErrorMsgForm,\n  startLoading,\n  finishLoading,\n} from \"./ui\";\nimport { LogoutCleaning } from \"./notes\";\n\nexport const loginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    dispatch(startLoading());\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(removeErrorMsgForm());\n        dispatch(login(user.uid, user.displayName));\n\n        dispatch(finishLoading());\n      })\n      .catch((e) => {\n        dispatch(finishLoading());\n        dispatch(errorMsgForm(e.message));\n        Swal.fire(\"ERROR\", e.message, \"error\");\n      });\n  };\n};\n//accion registrar usuario\n\nexport const newRegister = (name, email, password) => {\n  return (dispatch) => {\n    dispatch(startLoading());\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        dispatch(removeErrorMsgForm());\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoading());\n      })\n      .catch((e) => {\n        dispatch(finishLoading());\n        dispatch(errorMsgForm(e.message));\n        Swal.fire(\"ERROR\", e.message, \"error\");\n      });\n  };\n};\n//accion auth google\nexport const startGoogle = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n//accion login\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: { uid, displayName },\n  };\n};\nexport const logout = () => {\n  return { type: types.logout };\n};\n\nexport const StartLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch(logout());\n    dispatch(LogoutCleaning());\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { loginEmailPassword, startGoogle } from \"../../actions/auth\";\n\nexport const LoginScreen = () => {\n  //hook de react redux que dispara acciones la reducer\n  const dispatch = useDispatch();\n  //hook de react redux para acceder al state\n  const state = useSelector((state) => state);\n\n  const { loading } = state.ui;\n  //hook personalizado que maneja el formulario, enviamos nombres de los campos e inicializacion\n  const [handlerInputForm, stateValues] = useForm({\n    email: \"\",\n    password: \"\",\n  });\n  //destructuracion del objeto statevalues, viene del hook useForm\n  const { email, password } = stateValues;\n\n  //manejamos el envio del formulario y activamos el dispatch\n  const handlerForm = (e) => {\n    e.preventDefault();\n    //login es una accion declarada en actions auth, regresa type(tipo de accion) y payload(datos a cargar)\n    dispatch(loginEmailPassword(email, password));\n  };\n  const handlerGoogleAuth = () => {\n    dispatch(startGoogle());\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Login</h3>\n\n      <form\n        onSubmit={handlerForm}\n        className=\"animate__animated animate__fadeIn\"\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          className=\"auth__input\"\n          autoComplete=\"off\"\n          onChange={handlerInputForm}\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          name=\"password\"\n          onChange={handlerInputForm}\n          className=\"auth__input\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n          disabled={loading}\n        >\n          Login\n        </button>\n\n        <div className=\"auth__social-networks\" onClick={handlerGoogleAuth}>\n          <p>Login con redes sociales</p>\n\n          <div className=\"google-btn\">\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in con google</b>\n            </p>\n          </div>\n        </div>\n\n        <Link to=\"/auth/register\" className=\"link\">\n          Crear nueva cuenta\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport validator from \"validator\";\nimport { useForm } from \"../../hooks/useForm\";\nimport Swal from \"sweetalert2\";\n\nimport { errorMsgForm, removeErrorMsgForm } from \"../../actions/ui\";\nimport { newRegister } from \"../../actions/auth\";\n\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { loading } = state.ui;\n  const [handlerInputForm, stateValues] = useForm({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  //const [stateErrorForm, setErrorForm] = useState(true); //hook para manejar el error visualizando el div\n  //const [stateErrorMessage, setErrorMessage] = useState(\"\"); //hook para manejar el error visualizando el mensaje\n\n  const { name, email, password, password2 } = stateValues;\n\n  const handleForm = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(newRegister(name, email, password));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(errorMsgForm(\"El nombre es requerido\"));\n      Swal.fire(\"ERROR\", \"El nombre es requerido\", \"error\");\n\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(errorMsgForm(\"Email invalido\"));\n      Swal.fire(\"ERROR\", \"Email invalido\", \"error\");\n\n      return false;\n    } else if (password.length < 5 || password !== password2) {\n      dispatch(\n        errorMsgForm(\"El password no coincide o es menor a 5 caracteres\")\n      );\n      Swal.fire(\n        \"ERROR\",\n        \"El password no coincide o es menor a 5 caracteres\",\n        \"error\"\n      );\n\n      return false;\n    }\n    dispatch(removeErrorMsgForm());\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Registro</h3>\n\n      <form onSubmit={handleForm} className=\"animate__animated animate__fadeIn\">\n        <input\n          type=\"text\"\n          placeholder=\"Nombre\"\n          name=\"name\"\n          value={name}\n          onChange={handlerInputForm}\n          className=\"auth__input\"\n          autoComplete=\"off\"\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          onChange={handlerInputForm}\n          className=\"auth__input\"\n          autoComplete=\"off\"\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={handlerInputForm}\n          className=\"auth__input\"\n        />\n\n        <input\n          type=\"password\"\n          placeholder=\"Confirmar password\"\n          name=\"password2\"\n          value={password2}\n          onChange={handlerInputForm}\n          className=\"auth__input\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block mb-5\"\n          disabled={loading}\n        >\n          Registro\n        </button>\n\n        <Link to=\"/auth/login\" className=\"link\">\n          ¿Ya estás registrado?\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { activeNote } from \"../../actions/notes\";\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n  const dispatch = useDispatch();\n\n  const dateNow = moment(date);\n  const handleNoteActive = () => {\n    dispatch(activeNote(id, { date, title, body, url }));\n  };\n\n  return (\n    <div\n      className=\"journal__entry pointer animate__animated animate__fadeIn\"\n      onClick={handleNoteActive}\n    >\n      {url && (\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      )}\n\n      <div className=\"journal__card\">\n        <div className=\"journal__entry-body\">\n          <p className=\"journal__entry-title\">{title}</p>\n          <p className=\"journal__entry-content\">{body}</p>\n        </div>\n\n        <div className=\"journal__entry-date-box\">\n          <span>{dateNow.format(\"DD\")}</span>\n          <h5>{dateNow.format(\"MMM\")}</h5>\n          <h4>{dateNow.format(\"YYYY\")}</h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { JournalEntry } from \"./JournalEntry\";\nimport { useSelector } from \"react-redux\";\n\nexport const JournalEntries = () => {\n  const { notes } = useSelector((state) => state.notes);\n\n  return (\n    <div className=\"journal__entries\">\n      {notes.map((note) => (\n        <JournalEntry key={note.id} {...note} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { JournalEntries } from \"./JournalEntries\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StartLogout } from \"../../actions/auth\";\nimport { newNote } from \"../../actions/notes\";\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const { auth } = useSelector((state) => state);\n  const { name } = auth;\n\n  const handleLogout = () => {\n    dispatch(StartLogout());\n  };\n\n  const handleNewNote = () => {\n    dispatch(newNote());\n  };\n  return (\n    <aside className=\"journal__sidebar\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"fas fa-code\"></i>\n\n          <span> {name}</span>\n        </h3>\n\n        <button className=\"btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"journal__new-entry\" onClick={handleNewNote}>\n        <i className=\"fas fa-robot fa-5x\"></i>\n\n        <p className=\"mt-5\">Nueva entrada</p>\n      </div>\n\n      <JournalEntries />\n    </aside>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateNote, fileUpload, startDelete } from \"../../actions/notes\";\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { date, id } = useSelector((state) => state.notes.active);\n  const { active } = useSelector((state) => state.notes);\n\n  const dateNow = moment(date);\n\n  const handleSave = () => {\n    dispatch(updateNote(active));\n  };\n  const handleFile = (e) => {\n    const file = e.target.files[0];\n    file && dispatch(fileUpload(file));\n  };\n  const handleImage = () => {\n    document.querySelector(\"#fileselector\").click();\n  };\n\n  const handleDelete = () => {\n    dispatch(startDelete(id));\n  };\n  const handleDeleteSwal = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        handleDelete();\n      }\n    });\n  };\n\n  return (\n    <div className=\"notes__appbar\">\n      <span>\n        {dateNow.format(\"DD\")} {dateNow.format(\"MMM\")} {dateNow.format(\"YYYY\")}\n      </span>\n\n      <input\n        type=\"file\"\n        style={{ display: \"none\" }}\n        id=\"fileselector\"\n        name=\"file\"\n        onChange={handleFile}\n      />\n\n      <div>\n        <button className=\"btn\" onClick={handleImage}>\n          Imagen\n        </button>\n\n        <button onClick={handleSave} className=\"btn\">\n          Guardar\n        </button>\n\n        <button onClick={handleDeleteSwal} className=\"btn\">\n          Borrar\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { NotesAppBar } from \"./NotesAppBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { activeNote } from \"../../actions/notes\";\n\nexport const NoteScreen = () => {\n  const { active: note, active } = useSelector((state) => state.notes);\n\n  const dispatch = useDispatch();\n  const url = active.url;\n\n  const [handlerInputForm, stateValues, reset] = useForm(note);\n\n  const { title, body } = stateValues;\n\n  const activeId = useRef(note.id);\n\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n\n  useEffect(() => {\n    dispatch(activeNote(stateValues.id, { ...stateValues }));\n  }, [stateValues, dispatch]);\n\n  return (\n    <div className=\"notes__main-content animate__animated animate__fadeIn\">\n      {url && (\n        <div\n          className=\"notes__image\"\n          style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      )}\n\n      <NotesAppBar />\n\n      <div className=\"notes__content\">\n        <input\n          type=\"text\"\n          placeholder=\"Inicia con un título\"\n          className=\"notes__title-input\"\n          autoComplete=\"off\"\n          name=\"title\"\n          value={title}\n          onChange={handlerInputForm}\n        />\n\n        <textarea\n          placeholder=\"Escribe algo...\"\n          className=\"notes__textarea\"\n          name=\"body\"\n          value={body}\n          onChange={handlerInputForm}\n        ></textarea>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const NothingSelected = () => {\n  return (\n    <div className=\"nothing__main-content\">\n      <p>\n        Selecciona una entrada\n        <br />o crea una.\n      </p>\n\n      <i className=\"fas fa-code fa-4x mt-5\"></i>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { NoteScreen } from \"../notes/NoteScreen\";\nimport { useSelector } from \"react-redux\";\nimport { NothingSelected } from \"./NothingSelected\";\n\nexport const JournalScreen = () => {\n  const { active } = useSelector((state) => state.notes);\n\n  return (\n    <div className=\"journal__main-content animate__animated animate__fadeIn\">\n      <Sidebar />\n\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { firebase } from \"../firebase/firebase-config\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\n\nimport { PublicRoute } from \"./PublicRoute\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { JournalScreen } from \"../components/dashboard/JournalScreen\";\nimport { login } from \"../actions/auth\";\nimport { loadNotesStart } from \"../actions/notes\";\n\nexport default function AppRouter() {\n  const dispatch = useDispatch();\n  //manejamos el loading general\n  const [checking, setCheking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //preguntar a firebase si el usuario esta logeado, si esta logeado enviar datos a state login\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLoggedIn(true);\n        dispatch(loadNotesStart(user.uid));\n      } else {\n        setIsLoggedIn(false);\n      }\n      setCheking(false);\n    });\n  }, [dispatch, setCheking, setIsLoggedIn]);\n\n  if (checking) {\n    return <h1>Espere...</h1>;\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isLoggedIn}\n          />\n\n          <PrivateRoute\n            exact\n            isAuthenticated={isLoggedIn}\n            path=\"/\"\n            component={JournalScreen}\n          />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  loading: false,\n  msgError: null,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return { ...state, msgError: action.payload };\n    case types.uiRemoveError:\n      return { ...state, msgError: null };\n    case types.uiStartLoading:\n      return { ...state, loading: true };\n    case types.uiFinishLoading:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  notes: [],\n  active: null,\n};\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesActive:\n      return {\n        ...state,\n        active: { ...action.payload },\n      };\n    case types.notesLoad:\n      return {\n        ...state,\n        notes: [...action.payload],\n      };\n    case types.notesUpdate:\n      return {\n        ...state,\n        active: action.payload.active,\n        notes: state.notes.map((note) =>\n          note.id === action.payload.id ? action.payload.note : note\n        ),\n      };\n    case types.notesDelete:\n      return {\n        ...state,\n        active: null,\n        notes: state.notes.filter((note) => note.id !== action.payload),\n      };\n\n    case types.notesLogoutCleaning:\n      return initialState;\n\n    case types.notesAddNew:\n      return {\n        ...state,\n        notes: [action.payload, ...state.notes],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { notesReducer } from \"../reducers/notesReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport AppRouter from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { JournalApp } from \"./JournalApp\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <JournalApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}